% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hta_flexsurv.R
\name{hta_flexsurv}
\alias{hta_flexsurv}
\title{Perform Parametric Survival Extrapolation Analyses for Predictive Economic Modeling (Independent Models)}
\usage{
hta_flexsurv(
  population_from,
  population_where = NULL,
  observation_from,
  observation_where = NULL,
  therapy_data_var = list(name = "TRT01P", name_label =
    "Planned Treatment for Period 01", levels = NULL, labels = NULL),
  time = "AVAL",
  time_unit = "W",
  parametric_list = list(Exponential = "exp", Weibull = "weibull", `Log-normal` =
    "lognormal", `Log-logistic` = "llogis", Gompertz = "gompertz", Gamma = "gamma",
    `Generalized Gamma` = "gengamma"),
  spline_list = list(),
  predict_time = 0:1040,
  rtf_meta = fct_rtf_meta(),
  rtf_prefix = paste0("survce0", "0", "os", "0"),
  id_analysis = c("e0stdflex0gof", "e0stdflex0fig0timelong", "e0stdflex0fig0timeshort"),
  outdata_path = tempdir(),
  outgraph_path = tempdir(),
  outtable_path = tempdir()
)
}
\arguments{
\item{population_from}{path to population SAS data or data.frame}

\item{population_where}{quosure or logical vector for where clause}

\item{observation_from}{path to observation SAS data or data.frame}

\item{observation_where}{quosure or logical vector for where clause}

\item{therapy_data_var}{{\code{list}}\cr therapy variable factor metadata with elements:
\tabular{lll}{ \code{name} \tab {\code{character}} \tab  variable name to convert \cr
\code{levels} \tab {\code{character}} \tab preferred order of values taken by variable \cr
\code{labels} \tab {\code{character}} \tab preferred label of values taken by variable \cr
\code{name_label} \tab {\code{character}} \tab variable label \cr}
if levels and labels are set to NULL, sort(unique(name)) will be
used for both
see \code{\link[base:factor]{base::factor()}} for details}

\item{time}{{\code{character}}\cr variable name with time information}

\item{time_unit}{{\code{character}}\cr run analysis in days('D'), weeks ('W'), months ('M') or years ('Y')}

\item{parametric_list}{{\code{list}}\cr named list of distributions of parametric model(s)
to include in analysis
see dist parameter in flexsurv::flesurvreg for details}

\item{spline_list}{{\code{list}}\cr named list of lists of scale, k and knots parameters
of spline models to include in analysis
see scale, k and knots parameters in flexsurv::flexsurvspline for details}

\item{predict_time}{{\code{numeric}}\cr time horizon for the extrapolated plot}

\item{rtf_meta}{{\code{list}}\cr List of lists with parameters used to format rtf
outputs as per \code{\link{fct_rtf_meta}} function}

\item{rtf_prefix}{{\code{character}}\cr prefix for all output names}

\item{id_analysis}{{\code{character}}\cr vector of request ids to include}

\item{outdata_path}{{\code{character}}\cr directory for .RData /.csv files}

\item{outgraph_path}{{\code{character}}\cr directory for .png/.rtf figures}

\item{outtable_path}{{\code{character}}\cr directory for .rtf tables}
}
\value{
character vector with paths of all .rtf files created
}
\description{
This is a wrapper function used to create agreed upon standard analysis. The
wrapper leverages on the verb layer of this package.
}
\details{
\enumerate{
\item Goodness of fit (id_analysis= 'e0stdflex0gof')
\itemize{
\item table: one rtf, one csv and one RData file (suffix = e0stdflex0gof)
}
\item Parametric and Spline Plots with KM data long term (id_analysis= 'e0stdflex0fig0timelong')
\itemize{
\item plot: one rtf, one png and one RData file (suffix = e0stdflex0fig0timelong)
}
\item Parametric and Spline Plots with KM data short term (id_analysis= 'e0stdflex0fig0timeshort')
\itemize{
\item plot: one rtf, one png and one RData file (suffix = e0stdflex0fig0timeshort)
}
}

Important information:
\itemize{
\item time variable is assumed to be available in days in observation_from data
\item RData and csv files will be available in outdata_path folder, figures related
files (.png, .rtf) in outgraph_path folder and table related outputs (.rtf) in
outtable_path folder
\item consistency between input parameters is the responsibility of the user
}
}
\section{Specification}{

\if{latex}{ hta_flexsurv is a wrapper function within mkanr to implement two 
standard parametric models within a proportional hazardâ€™s assumption (Exponential 
and Gompertz) and five standard parametric models within an accelerated failure 
time (AFT) framework (Weibull, Log-Logistic, Log-normal, Generalised Gamma 
and Gamma). Further, the function will also allow the implementation of spline 
on probit, odds and hazard scales. 
The function will rely on the parametrisation schema included within the flexsurv 
package (\url{https://cran.r-project.org/web/packages/flexsurv/vignettes/distributions.pdf}) 
to implement the standard parametric models.

Logical Specifications:
\enumerate{
\item	Please ensure that the treatment arm for which the models are to be 
fit is filtered in and the remaining arm(s) are filtered out. As no covariate 
is involved, the survival object is predicted by "~ 1".
\item \strong{Flexsurvreg} and \strong{Flexsurvspline} are recommended for 
implementing the parametric and spline models, respectively.
\item The following distribution names are to be specific in flexsurv for the 
respective models:
   \itemize{
     \item For implementing the exponential models, choose "exp" flexsurv distribution. 
     Next, extract the log(rate) parameter.
     \cr Example: \code{flexsurvreg(Surv(time, event) ~ 1, data = data, dist="exp")}
     \item For implementing an AFT type of Weibull model, choose "weibull" 
     distribution and extract the log(shape) and log(scale) from the res.t object.
     \cr Example: \code{flexsurvreg(Surv(time, event) ~ 1, data = data, dist="weibull")}
     \item For implementing the Gompertz model, choose the "gompertz" 
     distribution and extract the shape and log(rate) parameters.
     \cr Example: \code{flexsurvreg(Surv(time, event) ~ 1, data = data, dist="gompertz")}
     \item For applying the Log-logistic model, choose the "llogis" distribution 
     in flexsurv and extract log(shape) and log(scale).
     \cr Example: \code{flexsurvreg(Surv(time, event) ~ 1, data = data, dist="llogis")}
     \item For applying the Log-normal models, choose the "lnorm" distribution 
     and extract meanlog and log(sdlog).
     \cr Example: \code{flexsurvreg(Surv(time, event) ~ 1, data = data, dist="lnorm")}
     \item For applying the generalised gamma model, choose the "gengamma" 
     distribution and extract mu, log(sigma) and Q parameters. 
     \cr Example: \code{flexsurvreg(Surv(time, event) ~ 1, data = data, dist="gengamma")}
     }
}

Functional Specifications:
  \enumerate{
  \item Check wrapper level input parameters using \code{\link{bullet_proof}}
  \item Preprocess data for analysis with \code{\link{preprocess_data}}
        \describe{
        \item{note 1}{data named tte for future reference}
         }  
  \itemize{
        \item population_from = \strong{population_from}
        \item population_where = \strong{population_where}
        \item observation_from = \strong{observation_from}
        \item observation_where = \strong{observation_where}
        \item analysis_variable = list(name=paste0(\strong{time},"99"),
        derivation=paste0(\strong{time},"/", switch( \strong{time_unit}, "D"="1", "W" = "7",
         "M" = "30.4367", "Y" = "365.24" )),label='Analysis Variable 99')
        \item analysis_variable_unit = list(name=paste0(\strong{time},"99U"),
        derivation=paste0("'",switch( \strong{time_unit}, "D"="DAYS", "W" = "WEEKS",
         "M" = "MONTHS", "Y" = "YEARS" ),"'"),label='Analysis Variable 99 Unit')
        \item therapy_data_var=\strong{therapy_data_var}
        }
  \item Run models
    \enumerate{
             \item Run flexsurvreg models with \code{\link{run_models_flexsurvreg}}
               \itemize{
                   \item preprocessed_data=tte
                   \item surv_formula = eval(parse(text=paste0("stats::formula
                                   (survival::Surv(",\strong{time},"99, 1-CNSR) ~ 1))))
                   \item dist_list = \strong{parametric_list}
                   \item na.action=na.omit
                   }
             \item Run flexsurvspline models with \code{\link{run_models_flexsurvspline}}
               \itemize{
                   \item preprocessed_data=tte
                   \item surv_formula = eval(parse(text=paste0("stats::formula
                                   (survival::Surv(",\strong{time},"99, 1-CNSR) ~ 1))))
                   \item scalexk_list = \strong{spline_list}
                   \item na.action=na.omit
                   \item seed_value = 7902
                   \item method="Nelder-Mead"
                   }
             \item fits = append parametric and spline models
             }
  \item Generate analysis based on \strong{id_analysis}
    \enumerate{
    \item Goodness of fit table (\strong{id_analysis}= 'e0stdflex0gof')
          note: generates 1 rtf, 1 RData file and 1 csv file
      \enumerate{
             \item Extract gof from fits with \code{\link{extract_gof}}
               \itemize{
                   \item fits= fits
                   \item preprocessed_data=tte
                   }
             \item Format gof from step above with \code{\link{format_gof}}
               \itemize{
                   \item gof= result from step above
                   \item gof_arrange=NULL,
                   \item outdata_path = paste0(\strong{outdata_path}, "/", \strong{output_folder_name})
                   \item rename_output=paste0(\strong{rtf_prefix}, "e0stdflex0gof")
                   }
             \item Convert to rtf with \code{\link{rdata_to_rtf}}
               \itemize{
                   \item rename_output=paste0(\strong{rtf_prefix}, "e0stdflex0gof")
                   \item outdata_path = paste0(\strong{outdata_path}, "/", \strong{output_folder_name})
                   \item outtable_path = paste0(\strong{outtable_path}, "/", \strong{output_folder_name})
                   \item other rtf formatting come from \strong{rtf_meta} parameter
                   }
             \figure{survce0onearm0e0stdflex0gof.jpg}
             }
    \item Short Term Extrapolation Plot (\strong{id_analysis}= 'e0stdflex0fig0timeshort')
          note: generates 1 rtf, 1 png file and 1 RData file
      \enumerate{
             \item Extract estimates from fits with \code{\link{extract_est}}
               \itemize{
                   \item fits= fits
                   \item t= 0:max(tte$paste0(\strong{time},"99"))
                   \item ci= FALSE
                   \item se= FALSE
                   \item B= 1000
                   \item cl= 0.95
                   \item na.action = na.omit
                   }
             \item Format estimates from step above with \code{\link{format_est}}
               \itemize{
                   \item est= result from step above
                   \item preprocessed_data= tte
                   \item preprocessed_data_km= tte
                   \item break_point=0
                   \item surv_formula = eval(parse(text=paste0("stats::formula
                                   (survival::Surv(",\strong{time},"99, 1-CNSR) ~ 1))))
                   \item type= "fleming"
                   \item outdata_path = paste0(\strong{outdata_path}, "/", \strong{output_folder_name})
                   \item rename_output=paste0(\strong{rtf_prefix}, "e0stdflex0fig0timeshort")
                   }
             \item Convert to png with \code{\link{plot_smooth_line}}
               \itemize{
                   \item data= result from step above
                   \item xlab= paste0("Time in ",switch(\strong{time_unit},"W"="Weeks","D"="Days",
                     "M"="Months","Y"="Years"))
                   \item ylab= "Survival"
                   \item xvar= "x_primary"
                   \item yvar= "y_primary"
                   \item levelvar= "group_primary"
                   \item break_point= NULL
                   \item levelvar_legend = "Type"
                   \item fig_scale_x_continuous="scale_x_continuous(expand=c(0,0))"
                   \item fig_scale_y_continuous="scale_y_continuous(expand=c(0,0), breaks=seq(0,1,0.2), limits=c(0,1))"
                   \item rename_output=paste0(\strong{rtf_prefix}, "e0stdflex0fig0timeshort")
                   \item outdata_path = paste0(\strong{outdata_path}, "/", \strong{output_folder_name})
                   \item outgraph_path = paste0(\strong{outgraph_path}, "/", \strong{output_folder_name})
                   \item other rtf formatting come from \strong{rtf_meta} parameter
                   }
             \item Convert to rtf with \code{\link{png_to_rtf}}
               \itemize{
                   \item rename_output=paste0(\strong{rtf_prefix}, "e0stdflex0fig0timeshort")
                   \item outdata_path = paste0(\strong{outdata_path}, "/", \strong{output_folder_name})
                   \item outgraph_path = paste0(\strong{outgraph_path}, "/", \strong{output_folder_name})
                   \item other rtf formatting come from \strong{rtf_meta} parameter
                   }
             \figure{survce0onearm0e0stdflex0fig0timeshort.jpg}
             }
   \item Long Term Extrapolation Plot (\strong{id_analysis}= 'e0stdflex0fig0timelong')
          note: generates 1 rtf, 1 png file and 1 RData file
      \enumerate{
             \item Extract estimates from fits with \code{\link{extract_est}}
               \itemize{
                   \item fits= fits
                   \item t= \strong{predict_time}
                   \item ci= FALSE
                   \item se= FALSE
                   \item B= 1000
                   \item cl= 0.95
                   \item na.action = na.omit
                   }
             \item Format estimates from step above with \code{\link{format_est}}
               \itemize{
                   \item est= result from step above
                   \item preprocessed_data= tte
                   \item preprocessed_data_km= tte
                   \item break_point=0
                   \item surv_formula = eval(parse(text=paste0("stats::formula
                                   (survival::Surv(",\strong{time},"99, 1-CNSR) ~ 1))))
                   \item type= "fleming"
                   \item outdata_path = paste0(\strong{outdata_path}, "/", \strong{output_folder_name})
                   \item rename_output=paste0(\strong{rtf_prefix}, "e0stdflex0fig0timelong")
                   }
             \item Convert to png with \code{\link{plot_smooth_line}}
               \itemize{
                   \item data= result from step above
                   \item xlab= paste0("Time in ",switch(\strong{time_unit},"W"="Weeks","D"="Days",
                     "M"="Months","Y"="Years"))
                   \item ylab= "Survival"
                   \item xvar= "x_primary"
                   \item yvar= "y_primary"
                   \item levelvar= "group_primary"
                   \item break_point= NULL
                   \item levelvar_legend = "Type"
                   \item fig_scale_x_continuous="scale_x_continuous(expand=c(0,0))"
                   \item fig_scale_y_continuous="scale_y_continuous(expand=c(0,0), breaks=seq(0,1,0.2), limits=c(0,1))"
                   \item rename_output=paste0(\strong{rtf_prefix}, "e0stdflex0fig0timelong")
                   \item outdata_path = paste0(\strong{outdata_path}, "/", \strong{output_folder_name})
                   \item outgraph_path = paste0(\strong{outgraph_path}, "/", \strong{output_folder_name})
                   \item other rtf formatting come from \strong{rtf_meta} parameter
                   }
             \item Convert to rtf with \code{\link{png_to_rtf}}
               \itemize{
                   \item rename_output=paste0(\strong{rtf_prefix}, "e0stdflex0fig0timelong")
                   \item outdata_path = paste0(\strong{outdata_path}, "/", \strong{output_folder_name})
                   \item outgraph_path = paste0(\strong{outgraph_path}, "/", \strong{output_folder_name})
                   \item other rtf formatting come from \strong{rtf_meta} parameter
                   }
             \figure{survce0onearm0e0stdflex0fig0timelong.jpg}
             }
}}}

\if{html}{
The contents of this section are shown in PDF user manual only.
}
}

\examples{
\dontrun{
tmp_dir <- tempdir()
tmp_dir_all <- file.path(tmp_dir, "all")
dir.create(tmp_dir_all, recursive = TRUE)

hta_flexsurv(population_from = mkanr::adsl,
population_where = (ITTFL == "Y" & TRT01P=="B: Placebo"),
observation_from = mkanr::adtte,
observation_where = (PARAMCD == "OS"),
therapy_data_var = list(name="TRT01P",name_label="Planned 
Treatment for Period 01",levels=NULL,labels=NULL),
time = "AVAL",
time_unit = "W",
parametric_list = list(`Exponential`="exp",
`Weibull`="weibull",
`Log-normal`="lognormal", 
`Log-logistic`="llogis",
`Gompertz`="gompertz", 
`Gamma`="gamma", 
`Generalized Gamma`="gengamma"),
spline_list = list(`Spline on hazard - 1 knot`=list(scale="hazard",k=1),
`Spline on odds - 2 knots`=list(scale="odds",k=2),
`Spline on normal - 1 knots`=list(scale="normal",k=1)),
redict_time = 0:1040,
id_analysis=c('e0stdflex0gof','e0stdflex0fig0timelong','e0stdflex0fig0timeshort'),
rtf_prefix = "survce0os0arm10",
rtf_meta = fct_rtf_meta(output_suffix=list("all"),
rtf_title_pop=c("Subtitle 1", "(Population)"),
rtf_footnote_pop=c("Database Cutoff Date: XXX"),
 param="Overall Survival",
 therapy_arm=levels(tte[[therapy_data_var$name]]),
 output_suffix_update = list(),
 rtf_param=list(),
 models_title="Standard Parametric and Flexible Parametric Spline",
 modified_value=list()),
 outdata_path = tempdir(),
 outgraph_path = tempdir(),
 outtable_path = tempdir()
)
}
}
